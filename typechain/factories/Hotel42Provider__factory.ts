/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Hotel42Provider,
  Hotel42ProviderInterface,
} from "../Hotel42Provider";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "city",
        type: "string",
      },
      {
        internalType: "string",
        name: "state",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "stars",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "imageUrl",
        type: "string",
      },
    ],
    name: "addHotel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hotelId",
        type: "uint256",
      },
    ],
    name: "addRoomTypeByHotelId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllHotels",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "city",
            type: "string",
          },
          {
            internalType: "string",
            name: "state",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "stars",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "imageUrl",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct Hotel42Provider.Hotel[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getHotelById",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "city",
            type: "string",
          },
          {
            internalType: "string",
            name: "state",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "stars",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "imageUrl",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct Hotel42Provider.Hotel",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hotelId",
        type: "uint256",
      },
    ],
    name: "getRoomTypesByHotelId",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Hotel42Provider.RoomType[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611273806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301dc7b021461005c5780637379193414610078578063d91d20e2146100a8578063de9ab85f146100c6578063fa42cd6d146100e2575b600080fd5b61007660048036038101906100719190610c5c565b610112565b005b610092600480360381019061008d9190610d47565b6102b9565b60405161009f9190610f0a565b60405180910390f35b6100b06103dc565b6040516100bd919061108c565b60405180910390f35b6100e060048036038101906100db91906110ae565b610697565b005b6100fc60048036038101906100f79190610d47565b610731565b60405161010991906111bb565b60405180910390f35b600061011e60006109cf565b905060006040518060c00160405280888152602001878152602001868152602001858152602001848152602001838152509050806001600084815260200190815260200160002060008201518160000190805190602001906101819291906109f3565b50602082015181600101908051906020019061019e9291906109f3565b5060408201518160020190805190602001906101bb9291906109f3565b506060820151816003015560808201518160040190805190602001906101e29291906109f3565b5060a08201518160050155905050600281908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000190805190602001906102389291906109f3565b5060208201518160010190805190602001906102559291906109f3565b5060408201518160020190805190602001906102729291906109f3565b506060820151816003015560808201518160040190805190602001906102999291906109f3565b5060a0820151816005015550506102b060006109dd565b50505050505050565b60606102c560006109cf565b82106102d057600080fd5b60036000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156103d157838290600052602060002090600202016040518060400160405290816000820180546103369061120c565b80601f01602080910402602001604051908101604052809291908181526020018280546103629061120c565b80156103af5780601f10610384576101008083540402835291602001916103af565b820191906000526020600020905b81548152906001019060200180831161039257829003601f168201915b5050505050815260200160018201548152505081526020019060010190610303565b505050509050919050565b60606002805480602002602001604051908101604052809291908181526020016000905b8282101561068e57838290600052602060002090600602016040518060c00160405290816000820180546104339061120c565b80601f016020809104026020016040519081016040528092919081815260200182805461045f9061120c565b80156104ac5780601f10610481576101008083540402835291602001916104ac565b820191906000526020600020905b81548152906001019060200180831161048f57829003601f168201915b505050505081526020016001820180546104c59061120c565b80601f01602080910402602001604051908101604052809291908181526020018280546104f19061120c565b801561053e5780601f106105135761010080835404028352916020019161053e565b820191906000526020600020905b81548152906001019060200180831161052157829003601f168201915b505050505081526020016002820180546105579061120c565b80601f01602080910402602001604051908101604052809291908181526020018280546105839061120c565b80156105d05780601f106105a5576101008083540402835291602001916105d0565b820191906000526020600020905b8154815290600101906020018083116105b357829003601f168201915b50505050508152602001600382015481526020016004820180546105f39061120c565b80601f016020809104026020016040519081016040528092919081815260200182805461061f9061120c565b801561066c5780601f106106415761010080835404028352916020019161066c565b820191906000526020600020905b81548152906001019060200180831161064f57829003601f168201915b5050505050815260200160058201548152505081526020019060010190610400565b50505050905090565b6106a160006109cf565b81106106ac57600080fd5b6000604051806040016040528085815260200184815250905060036000838152602001908152602001600020819080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001908051906020019061071e9291906109f3565b5060208201518160010155505050505050565b610739610a79565b61074360006109cf565b821061074e57600080fd5b600160008381526020019081526020016000206040518060c001604052908160008201805461077c9061120c565b80601f01602080910402602001604051908101604052809291908181526020018280546107a89061120c565b80156107f55780601f106107ca576101008083540402835291602001916107f5565b820191906000526020600020905b8154815290600101906020018083116107d857829003601f168201915b5050505050815260200160018201805461080e9061120c565b80601f016020809104026020016040519081016040528092919081815260200182805461083a9061120c565b80156108875780601f1061085c57610100808354040283529160200191610887565b820191906000526020600020905b81548152906001019060200180831161086a57829003601f168201915b505050505081526020016002820180546108a09061120c565b80601f01602080910402602001604051908101604052809291908181526020018280546108cc9061120c565b80156109195780601f106108ee57610100808354040283529160200191610919565b820191906000526020600020905b8154815290600101906020018083116108fc57829003601f168201915b505050505081526020016003820154815260200160048201805461093c9061120c565b80601f01602080910402602001604051908101604052809291908181526020018280546109689061120c565b80156109b55780601f1061098a576101008083540402835291602001916109b5565b820191906000526020600020905b81548152906001019060200180831161099857829003601f168201915b505050505081526020016005820154815250509050919050565b600081600001549050919050565b6001816000016000828254019250508190555050565b8280546109ff9061120c565b90600052602060002090601f016020900481019282610a215760008555610a68565b82601f10610a3a57805160ff1916838001178555610a68565b82800160010185558215610a68579182015b82811115610a67578251825591602001919060010190610a4c565b5b509050610a759190610aaf565b5090565b6040518060c001604052806060815260200160608152602001606081526020016000815260200160608152602001600081525090565b5b80821115610ac8576000816000905550600101610ab0565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b3382610aea565b810181811067ffffffffffffffff82111715610b5257610b51610afb565b5b80604052505050565b6000610b65610acc565b9050610b718282610b2a565b919050565b600067ffffffffffffffff821115610b9157610b90610afb565b5b610b9a82610aea565b9050602081019050919050565b82818337600083830152505050565b6000610bc9610bc484610b76565b610b5b565b905082815260208101848484011115610be557610be4610ae5565b5b610bf0848285610ba7565b509392505050565b600082601f830112610c0d57610c0c610ae0565b5b8135610c1d848260208601610bb6565b91505092915050565b6000819050919050565b610c3981610c26565b8114610c4457600080fd5b50565b600081359050610c5681610c30565b92915050565b600080600080600060a08688031215610c7857610c77610ad6565b5b600086013567ffffffffffffffff811115610c9657610c95610adb565b5b610ca288828901610bf8565b955050602086013567ffffffffffffffff811115610cc357610cc2610adb565b5b610ccf88828901610bf8565b945050604086013567ffffffffffffffff811115610cf057610cef610adb565b5b610cfc88828901610bf8565b9350506060610d0d88828901610c47565b925050608086013567ffffffffffffffff811115610d2e57610d2d610adb565b5b610d3a88828901610bf8565b9150509295509295909350565b600060208284031215610d5d57610d5c610ad6565b5b6000610d6b84828501610c47565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dda578082015181840152602081019050610dbf565b83811115610de9576000848401525b50505050565b6000610dfa82610da0565b610e048185610dab565b9350610e14818560208601610dbc565b610e1d81610aea565b840191505092915050565b610e3181610c26565b82525050565b60006040830160008301518482036000860152610e548282610def565b9150506020830151610e696020860182610e28565b508091505092915050565b6000610e808383610e37565b905092915050565b6000602082019050919050565b6000610ea082610d74565b610eaa8185610d7f565b935083602082028501610ebc85610d90565b8060005b85811015610ef85784840389528151610ed98582610e74565b9450610ee483610e88565b925060208a01995050600181019050610ec0565b50829750879550505050505092915050565b60006020820190508181036000830152610f248184610e95565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060c0830160008301518482036000860152610f758282610def565b91505060208301518482036020860152610f8f8282610def565b91505060408301518482036040860152610fa98282610def565b9150506060830151610fbe6060860182610e28565b5060808301518482036080860152610fd68282610def565b91505060a0830151610feb60a0860182610e28565b508091505092915050565b60006110028383610f58565b905092915050565b6000602082019050919050565b600061102282610f2c565b61102c8185610f37565b93508360208202850161103e85610f48565b8060005b8581101561107a578484038952815161105b8582610ff6565b94506110668361100a565b925060208a01995050600181019050611042565b50829750879550505050505092915050565b600060208201905081810360008301526110a68184611017565b905092915050565b6000806000606084860312156110c7576110c6610ad6565b5b600084013567ffffffffffffffff8111156110e5576110e4610adb565b5b6110f186828701610bf8565b935050602061110286828701610c47565b925050604061111386828701610c47565b9150509250925092565b600060c083016000830151848203600086015261113a8282610def565b915050602083015184820360208601526111548282610def565b9150506040830151848203604086015261116e8282610def565b91505060608301516111836060860182610e28565b506080830151848203608086015261119b8282610def565b91505060a08301516111b060a0860182610e28565b508091505092915050565b600060208201905081810360008301526111d5818461111d565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061122457607f821691505b602082108103611237576112366111dd565b5b5091905056fea2646970667358221220f1671c990e49dfe397702bd18c2d1a4221a4c2aea3574fe1f9ccfc98fea22b4f64736f6c634300080d0033";

export class Hotel42Provider__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Hotel42Provider> {
    return super.deploy(overrides || {}) as Promise<Hotel42Provider>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Hotel42Provider {
    return super.attach(address) as Hotel42Provider;
  }
  connect(signer: Signer): Hotel42Provider__factory {
    return super.connect(signer) as Hotel42Provider__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Hotel42ProviderInterface {
    return new utils.Interface(_abi) as Hotel42ProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Hotel42Provider {
    return new Contract(address, _abi, signerOrProvider) as Hotel42Provider;
  }
}
